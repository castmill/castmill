name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, next]

jobs:
  test_castmill:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    defaults:
      run:
        working-directory: ./packages/castmill

    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['26']
        elixir: ['1.15.6']

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - run: mix deps.get
      - run: mix format --check-formatted
      - run: MIX_ENV=test mix compile --warnings-as-errors
      - run: mix test --warnings-as-errors
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432

          # Default root user credentials
          CASTMILL_ROOT_USER_EMAIL: root@mydomain.com
          CASTMILL_ROOT_USER_PASSWORD: root

  test_ui_common:
    runs-on: ubuntu-latest

    name: testing UI Common package with bun

    defaults:
      run:
        working-directory: ./packages/ui-common

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: bun run format:check
      - run: bun run test --run

  test_dashboard:
    runs-on: ubuntu-latest

    name: testing Dashboard package with bun

    defaults:
      run:
        working-directory: ./packages/dashboard

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install workspace dependencies
        working-directory: ./
        run: bun install --frozen-lockfile
      - name: Build @castmill/ui-common
        working-directory: ./packages/ui-common
        run: bun run build
      - run: bun run build
      - run: bun run format:check
      - run: bun run test --run

  test_player:
    runs-on: ubuntu-latest

    name: testing Player package with bun

    defaults:
      run:
        working-directory: ./packages/player

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install workspace dependencies
        working-directory: ./
        run: bun install --frozen-lockfile
      - name: Build @castmill/cache
        working-directory: ./packages/cache
        run: bun run build
      - run: bun run build
      - run: bun run format:check
      - run: bun run test

  test_cache:
    runs-on: ubuntu-latest

    name: testing Cache package with bun

    defaults:
      run:
        working-directory: ./packages/cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: bun run format:check
      - run: bun run test

  test_device:
    runs-on: ubuntu-latest

    name: testing Device package with bun

    defaults:
      run:
        working-directory: ./packages/device

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install workspace dependencies
        working-directory: ./
        run: bun install --frozen-lockfile
      - name: Build @castmill/cache
        working-directory: ./packages/cache
        run: bun run build
      - name: Build @castmill/player
        working-directory: ./packages/player
        run: bun run build
      - run: bun run build
      - run: bun run format:check
      - run: bun run test

  test_platforms:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - name: android-player
            dir: ./packages/platforms/android-player
          - name: webos-player
            dir: ./packages/platforms/webos-player
          - name: electron-player
            dir: ./packages/platforms/electron-player
          - name: legacy-adapter-player
            dir: ./packages/platforms/legacy-adapter-player

    name: Testing ${{ matrix.platform.name }} package with bun

    defaults:
      run:
        working-directory: ${{ matrix.platform.dir }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Bun
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Step 3: Install workspace dependencies
      - name: Install workspace dependencies
        working-directory: ./
        run: bun install --frozen-lockfile

      # Step 4: Install cache dependency
      - name: Install and build cache dependency
        working-directory: ./packages/cache
        run: bun run build

      # Step 5: Install player dependency
      - name: Install and build player dependency
        working-directory: ./packages/player
        run: bun run build

      # Step 6: Install device dependency
      - name: Install and build device dependency
        working-directory: ./packages/device
        run: bun run build

      # Step 7: Check formatting
      - name: Check formatting
        run: bun run format:check

      # Step 8: Lint
      - name: Lint code
        run: bun run lint

      # Step 9: Run unit tests
      - name: Run unit tests
        run: bun run test
